builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
echo hello bash
__vsc_prompt_cmd_original
touch questionnaire
touch questionnaire.sh
sh questionnaire.sh
bash questionnaire.sh
which bash
cd /usr/bin/bash
shebang
__vsc_prompt_cmd_original
./questionnaire.sh
ls --color=auto -l
chmod +x questionnaire.sh
ls --color=auto -l
./questionnaire.sh
ls --color=auto -l
ls --color=auto -l
ls --color=auto -l -r
./questionnaire.sh
./questionnaire.sh
bash questionnaire.sh
./questionnaire.sh
./questionnaire.sh
./questionnaire.sh
echo Hello Ocean
./questionnaire.sh
./questionnaire.sh
./questionnaire.sh
./questionnaire.sh
./questionnaire.sh
./questionnaire.sh
echo --help
man echo
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
./questionnaire.sh
./questionnaire.sh
clear
./questionnaire.sh
./questionnaire.sh
./questionnaire.sh
./questionnaire.sh
clear
./questionnaire.sh
touch countdown.sh
chomid +x
chomd +x
chomd +x coutdown.sh
chmod +x countdown.sh
clear
./countdown.sh
ls --color=auto -l
ls --color=auto
clear
./countdown.sh arg1 arg2 arg3
__vsc_prompt_cmd_original
echo $1
./countdown.sh arg1 arg2 arg3
./countdown.sh arg1 arg2 arg3
help
man if
help if
./countdown.sh arg1 arg2 arg3
echo $1
./countdown.sh arg1 arg2 arg3
./countdown.sh arg11 arg2 arg3
./countdown.sh arg11 arg2 arg3
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
git remote add origin git@github.com:gunzosi/Shell-Bash-Mini-Project.git
git add git@github.com:gunzosi/Shell-Bash-Mini-Project.git
git remote add origin git@github.com:gunzosi/Shell-Bash-Mini-Project.git
git remote add origin git@github.com:gunzosi/Shell-Bash-Mini-Project.git
echo "# Shell-Bash-Mini-Project" >> README.md
git init
git commit -m "first commit"
git remote add origin git@github.com:gunzosi/Shell-Bash-Mini-Project.git
git push -u origin main
git remote add git@github.com:gunzosi/Shell-Bash-Mini-Project.git
git add git@github.com:gunzosi/Shell-Bash-Mini-Project.git
git push -u
git push -u https://github.com/gunzosi/Shell-Bash-Mini-Project.git
git push -u https://github.com/gunzosi/Shell-Bash-Mini-Project.git
git remote add origin https://github.com/gunzosi/Shell-Bash-Mini-Project.git
git push -u origin main
git branch -M main
git push -u origin main
git push -u origin main
git push -u origin main
git push -u origin main SHA256:w35/1Y6LibX+j1dBSBbA8PnZxwnYzl/tlfDS8rjoIb4
git remote add origin https://github.com/gunzosi/Shell-Bash-Mini-Project.git SHA256:w35/1Y6LibX+j1dBSBbA8PnZxwnYzl/tlfDS8rjoIb4
git --help
git remote add origin git@github.com:gunzosi/Shell-Bash-Mini-Project.git
git clone git@github.com:gunzosi/Shell-Bash-Mini-Project.git
git push -u
./countdown.sh 4
./countdown.sh 5
./countdown.sh 5
./countdown.sh 5
help
help if
help [[
help if
help test
./countdown.sh 5
./countdown.sh 5
./countdown.sh 5
./countdown.sh 5
[[ 4 -le 5 ]]
[[ 4 -le 5 ]]
echo $?
[[ 4 -ge 5 ]]
echo $?
[[ 4 -ge 5 ]]
[[ 10 -ne 5 ]]
bad_command
bad_command
ls --color=auto
ls --color=auto
ls --color=auto
ls --color=auto -y
ls --color=auto -y
ls --color=auto -y
help test
[[ -a countdown.sh ]]
[[ -a bad_file.txt ]]
[[ -a countdown.sh ]]
[[ -x countdown.sh ]]
help [[
[[ -x countdown.sh && 5 -le 4 ]]
[[ -x countdown.sh || 5 -le 4 ]]
[[ -x countdown.sh || 5 -gt 0 ]]
./countdown.sh 1
./countdown.sh 3
./countdown.sh 22
./countdown.sh 22 2
./countdown.sh 0
help
./countdown.sh 10
./countdown.sh 9
./countdown.sh 9
./countdown.sh 10
help
ls --color=auto /
ls/bin
ls --color=auto /bin
man sleep
sleep 3
./countdown.sh 3
./countdown.sh 3
./countdown.sh 3
echo help
help echo
./countdown.sh 1
help while
./countdown.sh 1
__vsc_prompt_cmd_original
clear
./countdown.sh 1
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
clear
./countdown.sh 5
touch bingo.sh
chmod +x bingo.sh
./bingo.sh
printenv
echo LANG
echo $LANG
declare -p
echo $RANDOM
echo $RANDOM
echo $RANDOM
./bingo.sh
./bingo.sh
./bingo.sh
